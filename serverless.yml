service: imux
plugins:
  - serverless-wsgi
custom:
  domain: ${env:DOMAIN, 'imux.email'}
  emails: ${env:EMAILS_BUCKET, '${self:service}-${self:provider.stage}-emails'}
  kms: !Join ['', ['arn:aws:kms:${self:provider.region}:', !Ref AWS::AccountId, ':alias/aws/ses']]
  wsgi:
    app: imux.web.app
provider:
  name: aws
  runtime: python3.8
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource: !GetAtt accounts.Arn
    - Effect: Allow
      Action: lambda:InvokeFunction
      Resource: !Join ['', ['arn:aws:lambda:${self:provider.region}:', !Ref AWS::AccountId, ':function:${self:service}-${self:provider.stage}-decrypt']]
    - Effect: Allow
      Action: s3:GetObject
      Resource: arn:aws:s3:::${self:custom.emails}/*
    - Effect: Allow
      Action: kms:Decrypt
      Resource: '*'
functions:
  web:
    handler: wsgi_handler.handler
    events:
      - http: ANY /
      - http: ANY /{any+}
  decrypt:
    runtime: ruby2.5
    handler: decrypt.handler
    environment:
      KMS: ${self:custom.kms}
  forward:
    handler: imux.email.forward
    events:
      - s3:
          bucket: ${self:custom.emails}
          event: s3:ObjectCreated:*
          existing: true
  deactivate:
    handler: imux.accounts.deactivate
    events:
      - stream:
          type: dynamodb
          arn: !GetAtt accounts.StreamArn
resources:
  Resources:
    policy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: ${self:custom.emails}
        PolicyDocument:
          Statement:
            - Effect: Allow
              Action: s3:PutObject
              Resource: arn:aws:s3:::${self:custom.emails}/*
              Sid: ${self:service}-${self:provider.stage}-AllowSESPuts
              Principal:
                Service: ses.amazonaws.com
              Condition:
                StringEquals:
                  aws:Referer: !Ref AWS::AccountId
    ruleset:
      Type: AWS::SES::ReceiptRuleSet
      Properties:
        RuleSetName: ${self:service}-${self:provider.stage}-ruleset
    bounce:
      Type: AWS::SES::ReceiptRule
      Properties:
        RuleSetName: !Ref ruleset
        Rule:
          Enabled: true
          Recipients:
            - bounce@${self:custom.domain}
          Actions:
            - BounceAction:
                Message: The recipient email address is no longer active.
                Sender: deactivated@${self:custom.domain}
                SmtpReplyCode: 550
    store:
      Type: AWS::SES::ReceiptRule
      Properties:
        RuleSetName: !Ref ruleset
        After: !Ref bounce
        Rule:
          Enabled: true
          Actions:
            - S3Action:
                BucketName: ${self:custom.emails}
                KmsKeyArn: ${self:custom.kms}
    intro:
      Type: AWS::SES::Template
      Properties:
        Template:
          SubjectPart: Subscription Notification
          HtmlPart: |
            <p>
            Hello,
            <br><br>
            You have been added as a recipient of shared emails via
            <a target="_blank" rel="noopener noreferrer" href"="https://imux.email">imux.email</a>.
            <br>
            To ensure that you receive messages as reliably as possible,
            please add {{email}} to your address book.
            <br>
            If you believe that you should not have received this notification,
            please click
            <a target="_blank" rel="noopener noreferrer" href="{{unsubscribe}}">here</a>
            to unsubscribe.
            </p>
    accounts:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: uuid
            AttributeType: S
        KeySchema:
          - AttributeName: uuid
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        StreamSpecification:
          StreamViewType: OLD_IMAGE
        TimeToLiveSpecification:
          AttributeName: expires
          Enabled: true
